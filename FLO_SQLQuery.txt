select * from flo

--Kaç farklı müşterinin alışveriş yaptığını gösterecek sorguyu yazınız. 
select 
COUNT(DISTINCT(master_id))
from flo

--Toplam yapılan alışveriş sayısı ve ciroyu getirecek sorguyu yazınız.
select 
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) TOPLAM_ALISVERIS,
SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online]) TOPLAM_CIRO
from flo

-- Alışveriş başına ortalama ciroyu getirecek sorguyu yazınız.
select 
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) TOPLAM_ALISVERIS,
SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online]) TOPLAM_CIRO,
(SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online])/ 
SUM([order_num_total_ever_online] + [order_num_total_ever_offline])) AVG_CIRO
from flo

-- En son alışveriş yapılan kanal (last_order_channel) üzerinden yapılan alışverişlerin toplam ciro ve alışveriş sayılarını getirecek sorguyu yazınız. 
select 
[last_order_channel],
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) TOPLAM_ALISVERIS,
SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online]) TOPLAM_CIRO,
(SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online])/ 
SUM([order_num_total_ever_online] + [order_num_total_ever_offline])) AVG_CIRO
from flo
GROUP BY [last_order_channel]

-- Store type kırılımında elde edilen toplam ciroyu getiren sorguyu yazınız.
SELECT[store_type], SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online]) TOPLAM_CIRO
from flo
GROUP BY [store_type]

--Yıl kırılımında alışveriş sayılarını getirecek sorguyu yazınız (Yıl olarak müşterinin ilk alışveriş tarihi (first_order_date) yılını baz alınız) 
SELECT 
YEAR(CONVERT(DATE, [first_order_date])) ,
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) TOPLAM_ALISVERIS
from flo
GROUP BY  YEAR(CONVERT(DATE, [first_order_date]))


-- En son alışveriş yapılan kanal kırılımında alışveriş başına ortalama ciroyu hesaplayacak sorguyu yazınız. 
select
[last_order_channel], 
(SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online])/ SUM([order_num_total_ever_online] + [order_num_total_ever_offline])) AVG_CIRO
from flo
GROUP BY [last_order_channel]

--Son 12 ayda en çok ilgi gören kategoriyi getiren sorguyu yazınız.
SELECT TOP 1
DATEPART(MONTH, [last_order_date]) AS AY,  
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS,
[interested_in_categories_12] 
FROM FLO
WHERE [last_order_date] >= DATEADD(MONTH, -12, '2021-05-30') -- Son 12 ayı filtrelemek için
GROUP BY DATEPART(MONTH, [last_order_date]), [interested_in_categories_12] -- Aya ve kategoriye göre gruplama
ORDER BY TOPLAM_ALISVERIS DESC -- Toplam alışverişe göre büyükten küçüğe sıralama


SELECT MAX([last_order_date]) AS en_son_tarih
FROM FLO   -- 2021-05-30


--En çok tercih edilen store_type bilgisini getiren sorguyu yazınız. 
SELECT TOP 1
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS,
[store_type]
FROM FLO
GROUP BY ([order_num_total_ever_online] + [order_num_total_ever_offline]), [store_type]
ORDER BY 1 DESC


--En son alışveriş yapılan kanal (last_order_channel) bazında, en çok ilgi gören kategoriyi ve bu kategoriden ne kadarlık alışveriş yapıldığını getiren sorguyu yazınız
SELECT
    KANAL,
    KATEGORI,
    TOPLAM_ALISVERIS
FROM (
    SELECT
        [last_order_channel] AS KANAL,
        [interested_in_categories_12] AS KATEGORI,
        SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS,
        ROW_NUMBER() OVER(PARTITION BY [last_order_channel] ORDER BY SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) DESC) AS rn
    FROM FLO
    GROUP BY [last_order_channel], [interested_in_categories_12]
) AS TempTable
WHERE rn = 1;

-- En çok alışveriş yapan kişinin ID’ sini getiren sorguyu yazınız.
SELECT TOP 1
[master_id], 
SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS
FROM FLO
GROUP BY [master_id]
ORDER BY TOPLAM_ALISVERIS DESC



-- En çok alışveriş yapan kişinin alışveriş başına ortalama cirosunu ve alışveriş yapma gün ortalamasını (alışveriş sıklığını) getiren sorguyu yazınız.
SELECT TOP 1
	[master_id], 
	SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS,
	(SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online])/ SUM([order_num_total_ever_online] + [order_num_total_ever_offline])) AVG_CIRO,
	SUM(DATEDIFF(DAY, [first_order_date], [last_order_date_offline]))/SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS ALISVERIS_SIKLIK
FROM FLO
GROUP BY [master_id]
ORDER BY TOPLAM_ALISVERIS DESC

--En çok alışveriş yapan (ciro bazında) ilk 100 kişinin alışveriş yapma gün ortalamasını (alışveriş sıklığını) getiren sorguyu yazınız. 
SELECT TOP 100
	[master_id],
	(SUM([customer_value_total_ever_offline]+[customer_value_total_ever_online])/ SUM([order_num_total_ever_online] + [order_num_total_ever_offline])) AVG_CIRO,
	SUM(DATEDIFF(DAY, [first_order_date], [last_order_date_offline]))/SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS ALISVERIS_SIKLIK
FROM FLO
GROUP BY [master_id]
ORDER BY AVG_CIRO DESC

--En son alışveriş yapılan kanal (last_order_channel) kırılımında en çok alışveriş yapan müşteriyi getiren sorguyu yazınız
SELECT TOP 1
	[master_id],[last_order_channel],
	SUM([order_num_total_ever_online] + [order_num_total_ever_offline]) AS TOPLAM_ALISVERIS
FROM FLO
GROUP BY [last_order_channel],[master_id]
ORDER BY TOPLAM_ALISVERIS DESC



--En son alışveriş yapan kişinin ID’ sini getiren sorguyu yazınız. (Max son tarihte birden fazla alışveriş yapan ID bulunmakta.Bunları da getiriniz.) 
SELECT 
[master_id], [last_order_date]
FROM FLO
WHERE [last_order_date] = (SELECT MAX([last_order_date]) FROM FLO)

